@model IEnumerable<ClassAnalytics.Models.GradeBookModel>

@{
    ViewBag.Title = "AdminCharts";
    List<List<Object>> grades = new List<List<Object>>();
}
@{
    foreach (var item in Model)
    {
        if (item.possiblePoints != 0)
        {
            decimal? grade = 0;
            decimal? earned = item.pointsEarned;
            decimal possible = item.possiblePoints;
            if (item.pointsEarned == 0)
            {
                grade = 0;
            }
            else
            {
                grade = (earned / possible) * 100;
            }
            string student = item.StudentModels.fName + " " + item.StudentModels.lName;
            grades.Add(new List<Object> { student, grade });
        }
    }
}


<center><h3>Grade Charts</h3></center>

@using (Html.BeginForm())
{
    <div class="row" style="margin:0 auto;padding-bottom:10px;">
        <div class="col-xs-4" style="width:200px;">
            @Html.DropDownList("class_id", null, "Select a Class (Required)", htmlAttributes: new { @class = "form-control" })
        </div>
        <div class="col-xs-4" style="width:200px;margin-left:-20px;">
            @Html.DropDownList("task_id", null, "Student Averages", htmlAttributes: new { @class = "form-control" })
        </div>
        <div class="col-xs-2" style="margin-left:-10px;padding-left:0px;">
            <input type="submit" value="Search" class="btn btn-primary-2" />
        </div>
    </div>
}

<head>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load('current', {'packages':['corechart']});
        google.charts.setOnLoadCallback(drawChart);
        function drawChart() {

            var data = new google.visualization.DataTable();
            var grades_list = @Html.Raw(Json.Encode(grades));
            var grade_array = [];
            for(i=0;i<grades_list.length;i++){
                grade_array[grade_array.length] = [grades_list[i][0],grades_list[i][1]];
            }
            data.addColumn('string', 'Student');
            data.addColumn('number', 'Grade');
            for(i = 0; i < grade_array.length; i++)
                data.addRow([grade_array[i][0], grade_array[i][1]]);
            var options = {
                title: 'Student Grades',
                hAxis: {title: 'Student'},
                vAxis: {title: 'Grade', minValue: 0, maxValue: 100},
                legend: 'none'
            };

            var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

            chart.draw(data, options);
        }
    </script>
</head>
<body>
    <div id="chart_div" style="width: 80%; height: 500px;margin:0 auto;"></div>
</body>
