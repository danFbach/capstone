@model ClassAnalytics.Models.Class_Models.assignTaskViewModel

@{ 
    ViewBag.Title = "Assign " + Model.classTask.task.taskName + " to a Class.";
}
<div style="padding-left:15px;">
    <h4>@ViewBag.Title</h4>
    <h5 class="text-danger" style="padding-bottom:10px;">@ViewBag.statusMessage</h5>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(m => m.classTask.task_id)
        <div class="form-group">
            @Html.LabelFor(model => model.classTask.task_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2" style="padding-top:5px;">
                @Html.DisplayFor(model => model.classTask.task.taskName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.classTask.task_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.classTask.class_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownListFor(m => m.classTask.class_id, Model.classes, "Select Class", htmlAttributes : new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.classTask.class_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Assign Task" class="btn btn-primary-2" />
            </div>
        </div>
    </div>
}
<h5>
    @Html.ActionLink("Return to Tasks", "Index", "Task", new { id=Model.classTask.task.course_Id}, new { @class=""})
</h5>